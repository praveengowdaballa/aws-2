{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC with 2 subnets",
    "Parameters": {
        "vpcCidr": {
            "Description": "VPC CIDR block",
            "Type": "String",
            "Default": "10.0.0.0/24"
        },
        "PubSubCidr": {
            "Description": "Public Subnet",
            "Type": "String",
            "Default": "10.0.0.0/25"
        },
        "subnetAZ": {
            "Description": "Subnet AZ",
            "Type": "AWS::EC2::AvailabilityZone::Name",
            "Default": "eu-west-2b"
        },
	"prefix": {
	    "Description": "Value to add to front of tags",
	    "Type": "String",
            "Default": "Neueda"
	},
	"KeyPair": {
            "Description": "SSH key",
            "Type": "String"
        },
	"Region": {
	    "Description": "Region",
	    "Type": "String",
	    "Default": "eu-west-2"
	}
    },
    "Resources": {
        "vpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Ref": "vpcCidr" },
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join" : [" ", [{"Ref": "prefix"}, "VPC"]]}
                }]
            }
        },
        "publicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": ["vpc","attachGateway"],
            "Properties": {
                "CidrBlock": { "Ref": "PubSubCidr" },
                "AvailabilityZone": { "Ref": "subnetAZ" },
		            "MapPublicIpOnLaunch": "true",
                "VpcId": { "Ref": "vpc" },
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join" : [" ", [{"Ref": "prefix"}, "Public Subnet"]]}
                }]
            }
        },
        "inetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": ["vpc"],
            "Properties": {
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join" : [" ", [{"Ref": "prefix"}, "Internet Gateway"]]}
                }]
            }
        },
        "attachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": ["vpc","inetGateway"],
            "Properties": {
                "VpcId": { "Ref": "vpc" },
                "InternetGatewayId": { "Ref": "inetGateway" }
            }
        },
        "rtbPublic": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": [ "vpc", "attachGateway" ],
            "Properties": {
                "VpcId": { "Ref": "vpc" },
                "Tags": [{
                    "Key": "Name",
                    "Value": { "Fn::Join" : [" ", [{"Ref": "prefix"}, "Public Routing Table"]]}
                }]
            }
        },
        "routePublic": {
            "Type": "AWS::EC2::Route",
            "DependsOn": [ "rtbPublic", "attachGateway" ],
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": { "Ref": "rtbPublic" },
                "GatewayId": { "Ref": "inetGateway" }
            }
        },
        "subnetRouteTableAssociationPublic": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": [ "rtbPublic", "publicSubnet" ],
            "Properties": {
                "RouteTableId": { "Ref": "rtbPublic" },
                "SubnetId": { "Ref": "publicSubnet" }
            }
        },
        "PubSecGrp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Public Network Firewall",
                "VpcId": { "Ref": "vpc" },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "3306",
                    "ToPort": "3306",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "5601",
                    "ToPort": "5601",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "8111",
                    "ToPort": "8111",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "8080",
                    "ToPort": "8080",
                    "CidrIp": "0.0.0.0/0"
                }]
             }
        },
        "privateSubAccess": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Private Subnet Access",
                "VpcId": { "Ref": "vpc" },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "1",
                    "ToPort": "65535",
                    "CidrIp": {"Ref":"vpcCidr"}
                }]
            }
        },
        "sshSecGrp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SSH Network Firewall",
                "VpcId": { "Ref": "vpc" },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "0.0.0.0/0"
                }]
            }
        }
    },
    "Outputs": {
        "VpcId": {
            "Description": "VPC ID of the new environment",
            "Value": { "Ref": "vpc" }
        },
      	"PubSub": {
	          "Description": "Public Subnet ID",
	          "Value": { "Ref": "publicSubnet" }
	      },
        "PubSecGrpID": {
            "Description": "Public Firewall Rule",
            "Value": {"Ref": "PubSecGrp"}
        },
        "sshSecGrpID": {
            "Description": "SSH Firewall Rule",
            "Value": {"Ref": "sshSecGrp"}
        },
        "privateSubAccessID": {
            "Description": "Private Subnet Access",
            "Value": {"Ref": "privateSubAccess"}
        }
    }
}
