{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create TeamCity VM",
    "Parameters": {
        "KeyPair": {
            "Description": "SSH key",
            "Type": "String"
        },
        "PubSub": {
            "Description": "Public Subnet ID",
            "Type": "String"
        },
        "VpcId": {
            "Description": "VPC ID",
            "Type": "String"
        },
        "DNSZoneID": {
            "Description": "DNS Zone ID",
            "Type": "String"
        },
        "DomainName": {
            "Description": "Domain Name",
            "Type": "String"
        },
        "PubSecGrp": {
            "Description": "Public Security Group ID",
            "Type": "String"
        },
        "sshSecGrp": {
            "Description": "SSH Security Group ID",
            "Type": "String"
        },
        "AMI": {
            "Description": "AMI to use",
            "Type": "String",
            "Default": "ami-b968bad6"
        },
        "VMSize": {
            "Description": "Size of the instance to create",
            "Type": "String",
            "Default": "m4.large"
        },
        "VolumeID": {
            "Description": "EBS Volume for instance",
            "Type": "String"
        },
        "Prefix": {
            "Description": "Prefix name",
            "Type": "String",
            "Default": "neueda"
        }
    },
    "Resources": {
        "TeamCityInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {"Ref": "AMI"},
                "InstanceType": {"Ref": "VMSize"},
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SubnetId": {"Ref": "PubSub"},
                "SecurityGroupIds": [{"Ref": "PubSecGrp"},{"Ref":"sshSecGrp"}],
                "Volumes": [
                  {
                     "VolumeId": {"Ref": "VolumeID"},
                     "Device": "/dev/xvdd"
                  }
                ],
                "UserData": { "Fn::Base64": {"Fn::Join": ["", [
                  "#cloud-boothook","\n",
                  "#!/bin/bash -xve","\n",
                  "cd /tmp","\n",
                  "yum -y erase java-1.7.0-openjdk","\n",
                  "yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel.x86_64","\n",
                  "while [[ ! -b /dev/xvdd ]]; do sleep 5; done","\n",
                  "(lsblk | grep xvdd) && mkdir -p /opt/TeamCity; sleep 10","\n",
                  "(file -sL /dev/xvdd1 | grep -v filesystem) && (echo -e 'n\np\n1\n\n\nw\nq\n' | fdisk /dev/xvdd) && mkfs -t ext3 /dev/xvdd1 && sleep 10","\n",
                  "mount -t ext3 /dev/xvdd1 /opt/TeamCity && sleep 10","\n",
                  "cd /tmp","\n",
                  "[[ ! -d /opt/TeamCity/logs ]] && wget -q https://download.jetbrains.com/teamcity/TeamCity-2017.1.1.tar.gz","\n",
                  "cd /opt && sleep 10","\n",
                  "(df -h | grep xvdd1) && ([[ ! -d /opt/TeamCity/logs ]] && tar xvf /tmp/TeamCity-2017.1.1.tar.gz) && [[ -e /opt/TeamCity/conf ]] && rm /tmp/TeamCity-2017.1.1.tar.gz","\n",
                  "((df -h | grep xvdd1) && mkdir -p /opt/TeamCity/DATA) || echo '/opt/TeamCity/DATA already exists'","\n",
                  "sleep 10; cd /root && ln -s /opt/TeamCity/DATA .BuildServer","\n",
                  "sleep 10; grep -v TeamCity /etc/rc.local && echo 'mount -t ext3 /dev/xvdd1 /opt/TeamCity' >>/etc/rc.local","\n",
                  "grep -v startup.sh /etc/rc.local && echo '/opt/TeamCity/bin/startup.sh\n/opt/TeamCity/buildAgent/bin/agent.sh start' >>/etc/rc.local","\n",
                  "mkdir /opt/TeamCity/logs && touch /opt/TeamCity/logs/catalina.out","\n",
                  "sleep 10; [[ -e /opt/TeamCity/bin/startup.sh ]] && /opt/TeamCity/bin/startup.sh",
                  "sleep 20; /opt/TeamCity/buildAgent/bin/agent.sh start","n",
                  "/usr/bin/yum -y install docker","\n",
                  "sed -i 's/\\(docker.*\\)/\\1ec2-user/' /etc/group","\n",
                  "chkconfig docker on","\n",
                  "/sbin/service docker start","\n"
                ]]}},
                "Tags": [ {
                    "Key": "Name",
                    "Value": {"Fn::Join": [ " ", [ {"Ref": "Prefix"},"TeamCity Server"]]}
                }]

            }
        },
        "TeamCityDNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {"Ref": "DNSZoneID"},
                "Comment" : "DNS name for TeamCity server Instance.",
                "Name": {"Fn::Join": [ ".", ["teamcity",{"Ref": "DomainName"}]]},
                "Type": "A",
                "TTL": "600",
                "ResourceRecords" : [
                    {"Fn::GetAtt" : [ "TeamCityInstance", "PublicIp" ] }
                ]
            }
        },
        "TCSecGrp": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "TeamCity SSH to other nodes",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": {"Fn::Join": [ "/", [{"Fn::GetAtt": ["TeamCityInstance", "PrivateIp"]},"32"]]}
                }]
             }
         }

    },
    "Outputs": {
        "TeamCityID": {
            "Description": "The ID of the TeamCity",
            "Value": {
                "Ref": "TeamCityInstance"
            }
        },
        "TeamCityIP": {
            "Description": "IP of TeamCity",
            "Value": {
                "Fn::GetAtt" : [ "TeamCityInstance", "PublicIp" ]
            }
        },
        "TeamCityName": {
            "Description": "TeamCity DNS Name",
            "Value": {
                "Ref": "TeamCityDNS"
            }
        },
        "TCSecGrpID": {
            "Description": "TC SSH Security Group",
            "Value": {
                "Ref": "TCSecGrp"
            }
        }
    }
}
