{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create MySQL DB VM",
    "Parameters": {
        "KeyPair": {
            "Description": "SSH key",
            "Type": "String"
        },
        "PubSub": {
            "Description": "Public Subnet ID",
            "Type": "String"
        },
        "VpcId": {
            "Description": "VPC ID",
            "Type": "String"
        },
        "DNSZoneID": {
            "Description": "DNS Zone ID",
            "Type": "String"
        },
        "DomainName": {
            "Description": "Domain Name",
            "Type": "String"
        },
        "PubSecGrp": {
            "Description": "Security Group ID",
            "Type": "String"
        },
        "privAccess": {
            "Description": "Private Subnet Access",
            "Type": "String"
        },
        "AMI": {
            "Description": "AMI to use",
            "Type": "String",
            "Default": "ami-b968bad6"
        },
        "VMSize": {
            "Description": "Size of the instance to create",
            "Type": "String",
            "Default": "t2.medium"
        },
        "DBVol1": {
            "Description": "DB 1 EBS Volume",
            "Type": "String"
        },
        "DBVol2": {
            "Description": "DB 2 EBS Volume",
            "Type": "String"
        },
        "TCSecGrp": {
            "Description": "IP Address of TeamCity Server",
            "Type": "String"
        },
        "Prefix": {
            "Description": "Prefix name",
            "Type": "String",
            "Default": "neueda"
        }
    },
    "Resources": {
        "DBInstance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {"Ref": "AMI"},
                "InstanceType": {"Ref": "VMSize"},
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SubnetId": {"Ref": "PubSub"},
                "SecurityGroupIds": [{"Ref": "PubSecGrp"}, {"Ref": "TCSecGrp"}, {"Ref":"privAccess"}],
                "Volumes": [
                  {
                     "VolumeId": {"Ref": "DBVol1"},
                     "Device": "/dev/xvdd"
                  }
                ],
                "UserData": { "Fn::Base64": {"Fn::Join": ["", [
                  "#cloud-boothook","\n",
                  "#!/bin/bash -xve","\n",
                  "while [[ ! -b /dev/xvdd ]]; do sleep 5; done","\n",
                  "(lsblk | grep xvdd) && (file -sL /dev/xvdd1 | grep -v filesystem) && (echo -e 'n\np\n1\n\n\nw\nq\n' | fdisk /dev/xvdd) && sleep 10 && mkfs -t ext3 /dev/xvdd1 && sleep 10","\n",
                  "[[ ! -d /var/lib/mysql ]] && mkdir /var/lib/mysql","\n",
                  "sleep 10 && mount -t ext3 /dev/xvdd1 /var/lib/mysql && sleep 10","\n",
                  "grep -v mysql /etc/rc.local && echo -e 'mount -t ext3 /dev/xvdd1 /var/lib/mysql\nservice mysqld start' >>/etc/rc.local","\n",
                  "/usr/bin/yum -y install mysql56-server mysql56; sleep 10","\n",
                  "service mysqld start","\n",
                  "sleep 20","\n",
                  "mysql -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'secret123';\"","\n",
                  "cd /tmp && wget http://archive.apache.org/dist/activemq/5.14.5/apache-activemq-5.14.5-bin.tar.gz","\n",
                  "cd /opt","\n",
                  "mkdir /opt/activemq || echo '/opt/activemq already exists'","\n",
                  "tar xvf /tmp/http://archive.apache.org/dist/activemq/5.14.5/apache-activemq-5.14.5-bin.tar.gz --strip-component=1 -C /opt/activemq","\n",
                  "grep -v activemq /etc/rc.local && echo -e '/opt/activemq/bin/activemq start' >>/etc/rc.local","\n",
                  "/opt/activemq/bin/activemq start"
                ]]}},
                "Tags": [ {
                    "Key": "Name",
                    "Value": {"Fn::Join": [ " ", [ {"Ref": "Prefix"},"Database 1 Server"]]}
                }]

            }
        },
        "DBInstance2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {"Ref": "AMI"},
                "InstanceType": {"Ref": "VMSize"},
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "SubnetId": {"Ref": "PubSub"},
                "SecurityGroupIds": [{"Ref": "PubSecGrp"}, {"Ref": "TCSecGrp"}, {"Ref":"privAccess"}],
                "Volumes": [
                  {
                     "VolumeId": {"Ref": "DBVol2"},
                     "Device": "/dev/xvdd"
                  }
                ],
                "UserData": { "Fn::Base64": {"Fn::Join": ["", [
                  "#cloud-boothook","\n",
                  "#!/bin/bash -xve","\n",
                  "while [[ ! -b /dev/xvdd ]]; do sleep 5; done","\n",
                  "(lsblk | grep xvdd) && (file -sL /dev/xvdd1 | grep -v filesystem) && (echo -e 'n\np\n1\n\n\nw\nq\n' | fdisk /dev/xvdd) && sleep 10 && mkfs -t ext3 /dev/xvdd1 && sleep 10","\n",
                  "[[ ! -d /var/lib/mysql ]] && mkdir /var/lib/mysql","\n",
                  "sleep 10 && mount -t ext3 /dev/xvdd1 /var/lib/mysql && sleep 10","\n",
                  "grep -v mysql /etc/rc.local && echo -e 'mount -t ext3 /dev/xvdd1 /var/lib/mysql\nservice mysqld start' >>/etc/rc.local","\n",
                  "/usr/bin/yum -y install mysql56-server mysql56; sleep 10","\n",
                  "service mysqld start","\n",
                  "sleep 20","\n",
                  "mysql -uroot -e \"GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'secret123';\"","\n",
                  "cd /tmp && wget http://archive.apache.org/dist/activemq/5.14.5/apache-activemq-5.14.5-bin.tar.gz","\n",
                  "cd /opt","\n",
                  "mkdir /opt/activemq || echo '/opt/activemq already exists'","\n",
                  "tar xvf /tmp/http://archive.apache.org/dist/activemq/5.14.5/apache-activemq-5.14.5-bin.tar.gz --strip-component=1 -C /opt/activemq","\n",
                  "grep -v activemq /etc/rc.local && echo -e '/opt/activemq/bin/activemq start' >>/etc/rc.local","\n",
                  "/opt/activemq/bin/activemq start"
                ]]}},
                "Tags": [ {
                    "Key": "Name",
                    "Value": {"Fn::Join": [ " ", [ {"Ref": "Prefix"},"Database 2 Server"]]}
                }]

            }
        },
        "DB1DNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {"Ref": "DNSZoneID"},
                "Comment" : "DNS name for MySQL DB 1 Instance.",
                "Name": {"Fn::Join": [ ".", ["db1",{"Ref": "DomainName"}]]},
                "Type": "A",
                "TTL": "600",
                "ResourceRecords" : [
                    {"Fn::GetAtt" : [ "DBInstance1", "PublicIp" ] }
                ]
            }
        },
        "DB2DNS": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "HostedZoneId": {"Ref": "DNSZoneID"},
                "Comment" : "DNS name for MySQL DB 2 Instance.",
                "Name": {"Fn::Join": [ ".", ["db2",{"Ref": "DomainName"}]]},
                "Type": "A",
                "TTL": "600",
                "ResourceRecords" : [
                    {"Fn::GetAtt" : [ "DBInstance2", "PublicIp" ] }
                ]
            }
        }
    },
    "Outputs": {
        "DB1ID": {
            "Description": "The ID of the DB 1 Server",
            "Value": {
                "Ref": "DBInstance1"
            }
        },
        "DB1PubIP": {
            "Description": "IP of DB 1 Server",
            "Value": {
                "Fn::GetAtt" : [ "DBInstance1", "PublicIp" ]
            }
        },
        "DB1PrivIP": {
            "Description": "Private IP of DB 1 Server",
            "Value": {
                "Fn::GetAtt" : [ "DBInstance1", "PrivateIp" ]
            }
        },
        "DB1Name": {
            "Description": "DB 1 DNS Name",
            "Value": {
                "Ref": "DB1DNS"
            }
        },
        "DB2ID": {
            "Description": "The ID of the DB 2 Server",
            "Value": {
                "Ref": "DBInstance2"
            }
        },
        "DB2PubIP": {
            "Description": "IP of DB 2 Server",
            "Value": {
                "Fn::GetAtt" : [ "DBInstance2", "PublicIp" ]
            }
        },
        "DB2PrivIP": {
            "Description": "Private IP of DB 2 Server",
            "Value": {
                "Fn::GetAtt" : [ "DBInstance2", "PrivateIp" ]
            }
        },
        "DB2Name": {
            "Description": "DB 2 DNS Name",
            "Value": {
                "Ref": "DB2DNS"
            }
        }
    }
}
